"""Nubank tap class."""

from __future__ import annotations

from singer_sdk import Tap
from singer_sdk import typing as th  # JSON schema typing helpers

from tap_nubank.streams import CardStatementsStream
from tap_nubank.streams import NubankStream

STREAM_TYPES = [
    CardStatementsStream,
]


class TapNubank(Tap):
    """Nubank tap class."""

    name = 'tap-nubank'

    config_jsonschema = th.PropertiesList(
        th.Property(
            'nubank_user',
            th.StringType,
            required=True,
            description='User from Nubank',
        ),
        th.Property(
            'nubank_password',
            th.StringType,
            required=True,
            secret=True,
            description='Password from Nubank',
        ),
        th.Property(
            'qrcode_uuid',
            th.StringType,
            required=True,
            secret=True,
            description='UUID generated by authenticating through QRCode',
        ),
        th.Property(
            'is_test',
            th.BooleanType,
            default=False,
            description='Flag to mock responses from API',
        ),
    ).to_dict()

    def discover_streams(self) -> list[NubankStream]:
        """Return a list of discovered streams.

        Returns:
            A list of discovered streams.
        """
        return [stream_class(tap=self) for stream_class in STREAM_TYPES]


if __name__ == '__main__':
    TapNubank.cli()
